{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\n\nvar useNearScreen = function useNearScreen() {\n  _s();\n\n  var element = useRef(null);\n\n  var _useState = useState(false),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  useEffect(function () {\n    Promise.resolve(typeof window.IntersectionObserver !== 'undefined' ? window.IntersectionObserver : import('intersection-observer')).then(function () {\n      var observer = new window.IntersectionObserver(function (entries) {\n        var isIntersecting = entries[0].isIntersecting;\n\n        if (isIntersecting) {\n          setShow(true);\n          observer.disconnect();\n        }\n      });\n      observer.observe(element.current);\n    });\n  }, [element]);\n  return [element, show];\n};\n\n_s(useNearScreen, \"1meki7q51bDBrn5DlxOX6U+sueI=\");\n\nexport default useNearScreen;","map":{"version":3,"sources":["C:/Users/Arielskap/Documents/empiresRataBoy/src/hooks/useNearScreen.js"],"names":["useEffect","useState","useRef","useNearScreen","element","show","setShow","Promise","resolve","window","IntersectionObserver","then","observer","entries","isIntersecting","disconnect","observe","current"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAC1B,MAAMC,OAAO,GAAGF,MAAM,CAAC,IAAD,CAAtB;;AAD0B,kBAEFD,QAAQ,CAAC,KAAD,CAFN;AAAA,MAEnBI,IAFmB;AAAA,MAEbC,OAFa;;AAI1BN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,OAAO,CAACC,OAAR,CACE,OAAOC,MAAM,CAACC,oBAAd,KAAuC,WAAvC,GACED,MAAM,CAACC,oBADT,GAEE,OAAO,uBAAP,CAHJ,EAKGC,IALH,CAKQ,YAAM;AACV,UAAMC,QAAQ,GAAG,IAAIH,MAAM,CAACC,oBAAX,CAAgC,UAACG,OAAD,EAAa;AAAA,YACpDC,cADoD,GACjCD,OAAO,CAAC,CAAD,CAD0B,CACpDC,cADoD;;AAE5D,YAAIA,cAAJ,EAAoB;AAClBR,UAAAA,OAAO,CAAC,IAAD,CAAP;AACAM,UAAAA,QAAQ,CAACG,UAAT;AACD;AACF,OANgB,CAAjB;AAOAH,MAAAA,QAAQ,CAACI,OAAT,CAAiBZ,OAAO,CAACa,OAAzB;AACD,KAdH;AAeD,GAhBQ,EAgBN,CAACb,OAAD,CAhBM,CAAT;AAkBA,SAAO,CAACA,OAAD,EAAUC,IAAV,CAAP;AACD,CAvBD;;GAAMF,a;;AAyBN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState, useRef } from 'react';\r\n\r\nconst useNearScreen = () => {\r\n  const element = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Promise.resolve(\r\n      typeof window.IntersectionObserver !== 'undefined' ?\r\n        window.IntersectionObserver :\r\n        import('intersection-observer'),\r\n    )\r\n      .then(() => {\r\n        const observer = new window.IntersectionObserver((entries) => {\r\n          const { isIntersecting } = entries[0];\r\n          if (isIntersecting) {\r\n            setShow(true);\r\n            observer.disconnect();\r\n          }\r\n        });\r\n        observer.observe(element.current);\r\n      });\r\n  }, [element]);\r\n\r\n  return [element, show];\r\n};\r\n\r\nexport default useNearScreen;\r\n"]},"metadata":{},"sourceType":"module"}