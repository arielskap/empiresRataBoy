{"ast":null,"code":"import { useSpring } from 'react-spring';\nexport const useSlide = (translateX = 0, translateY = 0) => {\n  const [slide, setSlide, stopSlide] = useSpring(() => ({\n    to: {\n      transform: 'translate(0px, 0px)'\n    },\n    from: {\n      transform: `translate(${translateX}px, ${translateY}px)`\n    }\n  }));\n  return {\n    slide,\n    setSlide,\n    stopSlide\n  };\n};\nexport const useFade = (isReverse = false) => {\n  const [fade, setFade, stopFade] = useSpring(() => ({\n    to: {\n      opacity: isReverse ? 0 : 1\n    },\n    from: {\n      opacity: isReverse ? 1 : 0\n    }\n  }));\n  return {\n    fade,\n    setFade,\n    stopFade\n  };\n};\nexport const useRenderImg = () => {\n  const [renderImg, setRenderImg, stopRenderImg] = useSpring(() => ({\n    config: {\n      duration: 1000\n    },\n    to: {\n      opacity: 1,\n      filter: 'blur(0)'\n    },\n    from: {\n      opacity: 0,\n      filter: 'blur(5px)'\n    }\n  }));\n  return {\n    renderImg,\n    setRenderImg,\n    stopRenderImg\n  };\n};\nexport const useRotateY = (isReverse = false) => {\n  const [rotateY, setRotateY, stopRotateY] = useSpring(() => ({\n    to: {\n      transform: isReverse ? 'rotateY(0deg)' : 'rotateY(180deg)'\n    },\n    from: {\n      transform: isReverse ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    }\n  }));\n  return {\n    rotateY,\n    setRotateY,\n    stopRotateY\n  };\n};","map":{"version":3,"sources":["C:/Users/Arielskap/Documents/empiresRataBoy/src/animations/useSpring.js"],"names":["useSpring","useSlide","translateX","translateY","slide","setSlide","stopSlide","to","transform","from","useFade","isReverse","fade","setFade","stopFade","opacity","useRenderImg","renderImg","setRenderImg","stopRenderImg","config","duration","filter","useRotateY","rotateY","setRotateY","stopRotateY"],"mappings":"AAAA,SAASA,SAAT,QAA0B,cAA1B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,UAAU,GAAG,CAAd,EAAiBC,UAAU,GAAG,CAA9B,KAAoC;AAC1D,QAAM,CAACC,KAAD,EAAQC,QAAR,EAAkBC,SAAlB,IAA+BN,SAAS,CAAC,OAAO;AACpDO,IAAAA,EAAE,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADgD;AAEpDC,IAAAA,IAAI,EAAE;AAAED,MAAAA,SAAS,EAAG,aAAYN,UAAW,OAAMC,UAAW;AAAtD;AAF8C,GAAP,CAAD,CAA9C;AAIA,SAAO;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAP;AACD,CANM;AAQP,OAAO,MAAMI,OAAO,GAAG,CAACC,SAAS,GAAG,KAAb,KAAuB;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,EAAgBC,QAAhB,IAA4Bd,SAAS,CAAC,OAAO;AACjDO,IAAAA,EAAE,EAAE;AAAEQ,MAAAA,OAAO,EAAEJ,SAAS,GAAG,CAAH,GAAO;AAA3B,KAD6C;AAEjDF,IAAAA,IAAI,EAAE;AAAEM,MAAAA,OAAO,EAAEJ,SAAS,GAAG,CAAH,GAAO;AAA3B;AAF2C,GAAP,CAAD,CAA3C;AAIA,SAAO;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAP;AACD,CANM;AAQP,OAAO,MAAME,YAAY,GAAG,MAAM;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,EAA0BC,aAA1B,IAA2CnB,SAAS,CAAC,OAAO;AAChEoB,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADwD;AAEhEd,IAAAA,EAAE,EAAE;AAAEQ,MAAAA,OAAO,EAAE,CAAX;AAAcO,MAAAA,MAAM,EAAE;AAAtB,KAF4D;AAGhEb,IAAAA,IAAI,EAAE;AAAEM,MAAAA,OAAO,EAAE,CAAX;AAAcO,MAAAA,MAAM,EAAE;AAAtB;AAH0D,GAAP,CAAD,CAA1D;AAKA,SAAO;AAAEL,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,GAAP;AACD,CAPM;AASP,OAAO,MAAMI,UAAU,GAAG,CAACZ,SAAS,GAAG,KAAb,KAAuB;AAC/C,QAAM,CAACa,OAAD,EAAUC,UAAV,EAAsBC,WAAtB,IAAqC1B,SAAS,CAAC,OAAO;AAC1DO,IAAAA,EAAE,EAAE;AAAEC,MAAAA,SAAS,EAAEG,SAAS,GAAG,eAAH,GAAqB;AAA3C,KADsD;AAE1DF,IAAAA,IAAI,EAAE;AAAED,MAAAA,SAAS,EAAEG,SAAS,GAAG,iBAAH,GAAuB;AAA7C;AAFoD,GAAP,CAAD,CAApD;AAIA,SAAO;AAAEa,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,GAAP;AACD,CANM","sourcesContent":["import { useSpring } from 'react-spring';\r\n\r\nexport const useSlide = (translateX = 0, translateY = 0) => {\r\n  const [slide, setSlide, stopSlide] = useSpring(() => ({\r\n    to: { transform: 'translate(0px, 0px)' },\r\n    from: { transform: `translate(${translateX}px, ${translateY}px)` },\r\n  }));\r\n  return { slide, setSlide, stopSlide };\r\n};\r\n\r\nexport const useFade = (isReverse = false) => {\r\n  const [fade, setFade, stopFade] = useSpring(() => ({\r\n    to: { opacity: isReverse ? 0 : 1 },\r\n    from: { opacity: isReverse ? 1 : 0 },\r\n  }));\r\n  return { fade, setFade, stopFade };\r\n};\r\n\r\nexport const useRenderImg = () => {\r\n  const [renderImg, setRenderImg, stopRenderImg] = useSpring(() => ({\r\n    config: { duration: 1000 },\r\n    to: { opacity: 1, filter: 'blur(0)' },\r\n    from: { opacity: 0, filter: 'blur(5px)' },\r\n  }));\r\n  return { renderImg, setRenderImg, stopRenderImg };\r\n};\r\n\r\nexport const useRotateY = (isReverse = false) => {\r\n  const [rotateY, setRotateY, stopRotateY] = useSpring(() => ({\r\n    to: { transform: isReverse ? 'rotateY(0deg)' : 'rotateY(180deg)' },\r\n    from: { transform: isReverse ? 'rotateY(180deg)' : 'rotateY(0deg)' },\r\n  }));\r\n  return { rotateY, setRotateY, stopRotateY };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}