{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arielskap\\\\Documents\\\\empiresRataBoy\\\\src\\\\pages\\\\alianzas.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { animated } from 'react-spring';\nimport { useVerifyFetch } from '../hooks';\nimport { useFade } from '../animations';\nimport { CardAlianza, Modal, MessageErrorFetch } from '../components';\nimport Layout from '../components/Layout';\nimport { fetchJson2 } from '../localFunction';\nexport default (({\n  response\n}) => {\n  const {\n    fade\n  } = useFade();\n  const {\n    open,\n    setOpen,\n    errorResponse,\n    data\n  } = useVerifyFetch(response);\n  return __jsx(Layout, {\n    title: \"Alianzas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(animated.main, {\n    style: fade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"mb-4 text-2xl font-bold text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Alianzas\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), \"que Conforman la Red\"), __jsx(\"div\", {\n    className: \"grid grid-cols-3 gap-4 mx-2 lg:grid-cols-6 lg:mx-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, data && Array.isArray(data) && data.map(alianza => {\n    const {\n      id\n    } = alianza;\n    return __jsx(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, __jsx(CardAlianza, {\n      json: alianza,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }));\n  }))), __jsx(Modal, {\n    data: {\n      open,\n      setOpen\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(MessageErrorFetch, {\n    errorResponse: errorResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Traer la de Alianzas\")));\n});\nexport function getServerSideProps() {\n  return _getServerSideProps.apply(this, arguments);\n}\n\nfunction _getServerSideProps() {\n  _getServerSideProps = _asyncToGenerator(function* () {\n    const data = yield fetchJson2('alianzas');\n    return {\n      props: {\n        response: data\n      }\n    };\n  });\n  return _getServerSideProps.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/Arielskap/Documents/empiresRataBoy/src/pages/alianzas.js"],"names":["animated","useVerifyFetch","useFade","CardAlianza","Modal","MessageErrorFetch","Layout","fetchJson2","response","fade","open","setOpen","errorResponse","data","Array","isArray","map","alianza","id","getServerSideProps","props"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,WAAT,EAAsBC,KAAtB,EAA6BC,iBAA7B,QAAsD,eAAtD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAWP,OAAO,EAAxB;AACA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,aAAjB;AAAgCC,IAAAA;AAAhC,MAAyCZ,cAAc,CAACO,QAAD,CAA7D;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,yBADF,EAME;AAAK,IAAA,SAAS,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,IAAI,IAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAR,IAA+BA,IAAI,CAACG,GAAL,CAAUC,OAAD,IAAa;AACpD,UAAM;AAAEC,MAAAA;AAAF,QAASD,OAAf;AACA,WACE;AAAK,MAAA,GAAG,EAAEC,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,IAAI,EAAED,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAP+B,CADlC,CANF,CADF,EAkBE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE;AAAEP,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAmB,IAAA,aAAa,EAAEC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAlBF,CADF;AAwBD,CA5BD;AA8BA,gBAAsBO,kBAAtB;AAAA;AAAA;;;0CAAO,aAAoC;AACzC,UAAMN,IAAI,SAASN,UAAU,CAAC,UAAD,CAA7B;AAEA,WAAO;AAAEa,MAAAA,KAAK,EAAE;AAAEZ,QAAAA,QAAQ,EAAEK;AAAZ;AAAT,KAAP;AACD,G","sourcesContent":["import { animated } from 'react-spring';\r\nimport { useVerifyFetch } from '../hooks';\r\nimport { useFade } from '../animations';\r\nimport { CardAlianza, Modal, MessageErrorFetch } from '../components';\r\nimport Layout from '../components/Layout';\r\nimport { fetchJson2 } from '../localFunction';\r\n\r\nexport default ({ response }) => {\r\n  const { fade } = useFade();\r\n  const { open, setOpen, errorResponse, data } = useVerifyFetch(response);\r\n\r\n  return (\r\n    <Layout title='Alianzas'>\r\n      <animated.main style={fade}>\r\n        <h2 className='mb-4 text-2xl font-bold text-center'>\r\n          Alianzas\r\n          <br />\r\n          que Conforman la Red\r\n        </h2>\r\n        <div className='grid grid-cols-3 gap-4 mx-2 lg:grid-cols-6 lg:mx-6'>\r\n          {data && Array.isArray(data) && data.map((alianza) => {\r\n            const { id } = alianza;\r\n            return (\r\n              <div key={id}>\r\n                <CardAlianza json={alianza} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </animated.main>\r\n      <Modal data={{ open, setOpen }}>\r\n        <MessageErrorFetch errorResponse={errorResponse}>Traer la de Alianzas</MessageErrorFetch>\r\n      </Modal>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport async function getServerSideProps() {\r\n  const data = await fetchJson2('alianzas')\r\n\r\n  return { props: { response: data } }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}