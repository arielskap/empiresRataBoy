{"ast":null,"code":"import { useEffect, useState } from 'react';\n\nconst useVerifyFetch = response => {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: errorResponse,\n    1: setErrorResponse\n  } = useState(false);\n  useEffect(() => {\n    const error = response.error || response.message;\n    console.log(response);\n\n    if (error) {\n      console.log(`Hubo un problema con la petición Fetch:${error}`);\n\n      if (!document.body.classList.contains('overflow-hidden')) {\n        document.body.classList.add('overflow-hidden');\n      }\n\n      setOpen(true);\n      setErrorResponse(error);\n    }\n  }, [response]);\n  return {\n    open,\n    setOpen,\n    errorResponse,\n    setErrorResponse,\n    data: response.body\n  };\n};\n\nexport default useVerifyFetch;","map":{"version":3,"sources":["C:/Users/Arielskap/Documents/empiresRataBoy/src/hooks/useVerifyFetch.jsx"],"names":["useEffect","useState","useVerifyFetch","response","open","setOpen","errorResponse","setErrorResponse","error","message","console","log","document","body","classList","contains","add","data"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAA,OAACK,aAAD;AAAA,OAAgBC;AAAhB,MAAoCN,QAAQ,CAAC,KAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGL,QAAQ,CAACK,KAAT,IAAkBL,QAAQ,CAACM,OAAzC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;;AACA,QAAIK,KAAJ,EAAW;AACTE,MAAAA,OAAO,CAACC,GAAR,CAAa,0CAAyCH,KAAM,EAA5D;;AACA,UAAI,CAACI,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,QAAxB,CAAiC,iBAAjC,CAAL,EAA0D;AACxDH,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,GAAxB,CAA4B,iBAA5B;AACD;;AACDX,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,gBAAgB,CAACC,KAAD,CAAhB;AACD;AACF,GAXQ,EAWN,CAACL,QAAD,CAXM,CAAT;AAaA,SAAO;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,aAAjB;AAAgCC,IAAAA,gBAAhC;AAAkDU,IAAAA,IAAI,EAAEd,QAAQ,CAACU;AAAjE,GAAP;AACD,CAlBD;;AAoBA,eAAeX,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst useVerifyFetch = (response) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errorResponse, setErrorResponse] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const error = response.error || response.message;\r\n    console.log(response)\r\n    if (error) {\r\n      console.log(`Hubo un problema con la petición Fetch:${error}`);\r\n      if (!document.body.classList.contains('overflow-hidden')) {\r\n        document.body.classList.add('overflow-hidden');\r\n      }\r\n      setOpen(true);\r\n      setErrorResponse(error);\r\n    }\r\n  }, [response]);\r\n\r\n  return { open, setOpen, errorResponse, setErrorResponse, data: response.body };\r\n};\r\n\r\nexport default useVerifyFetch;\r\n"]},"metadata":{},"sourceType":"module"}