{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arielskap\\\\Documents\\\\empiresRataBoy\\\\src\\\\components\\\\seo.js\";\nvar __jsx = React.createElement;\n\n/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nfunction SEO(_ref) {\n  var description = _ref.description,\n      lang = _ref.lang,\n      meta = _ref.meta,\n      title = _ref.title;\n  var metaDescription = description || site.siteMetadata.description;\n  return __jsx(Helmet, {\n    htmlAttributes: {\n      lang: lang\n    },\n    title: title,\n    titleTemplate: \"%s | \".concat(site.siteMetadata.title),\n    meta: [{\n      name: 'description',\n      content: metaDescription\n    }, {\n      property: 'og:title',\n      content: title\n    }, {\n      property: 'og:description',\n      content: metaDescription\n    }, {\n      property: 'og:type',\n      content: 'website'\n    }, {\n      name: 'twitter:card',\n      content: 'summary'\n    }, {\n      name: 'twitter:creator',\n      content: site.siteMetadata.author\n    }, {\n      name: 'twitter:title',\n      content: title\n    }, {\n      name: 'twitter:description',\n      content: metaDescription\n    }].concat(meta),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  });\n}\n\n_c = SEO;\nSEO.defaultProps = {\n  lang: 'es',\n  meta: [],\n  description: ''\n};\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\nexport default SEO;\n\nvar _c;\n\n$RefreshReg$(_c, \"SEO\");","map":{"version":3,"sources":["C:/Users/Arielskap/Documents/empiresRataBoy/src/components/seo.js"],"names":["React","PropTypes","Helmet","SEO","description","lang","meta","title","metaDescription","site","siteMetadata","name","content","property","author","concat","defaultProps","propTypes","string","arrayOf","object","isRequired"],"mappings":";;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,SAASC,GAAT,OAAiD;AAAA,MAAlCC,WAAkC,QAAlCA,WAAkC;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,IAAe,QAAfA,IAAe;AAAA,MAATC,KAAS,QAATA,KAAS;AAC/C,MAAMC,eAAe,GAAGJ,WAAW,IAAIK,IAAI,CAACC,YAAL,CAAkBN,WAAzD;AAEA,SACE,MAAC,MAAD;AACE,IAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAJA;AADc,KADlB;AAIE,IAAA,KAAK,EAAEE,KAJT;AAKE,IAAA,aAAa,iBAAUE,IAAI,CAACC,YAAL,CAAkBH,KAA5B,CALf;AAME,IAAA,IAAI,EAAE,CACJ;AACEI,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,OAAO,EAAEJ;AAFX,KADI,EAKJ;AACEK,MAAAA,QAAQ,EAAE,UADZ;AAEED,MAAAA,OAAO,EAAEL;AAFX,KALI,EASJ;AACEM,MAAAA,QAAQ,EAAE,gBADZ;AAEED,MAAAA,OAAO,EAAEJ;AAFX,KATI,EAaJ;AACEK,MAAAA,QAAQ,EAAE,SADZ;AAEED,MAAAA,OAAO,EAAE;AAFX,KAbI,EAiBJ;AACED,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,OAAO,EAAE;AAFX,KAjBI,EAqBJ;AACED,MAAAA,IAAI,EAAE,iBADR;AAEEC,MAAAA,OAAO,EAAEH,IAAI,CAACC,YAAL,CAAkBI;AAF7B,KArBI,EAyBJ;AACEH,MAAAA,IAAI,EAAE,eADR;AAEEC,MAAAA,OAAO,EAAEL;AAFX,KAzBI,EA6BJ;AACEI,MAAAA,IAAI,EAAE,qBADR;AAEEC,MAAAA,OAAO,EAAEJ;AAFX,KA7BI,EAiCJO,MAjCI,CAiCGT,IAjCH,CANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA2CD;;KA9CQH,G;AAgDTA,GAAG,CAACa,YAAJ,GAAmB;AACjBX,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBF,EAAAA,WAAW,EAAE;AAHI,CAAnB;AAMAD,GAAG,CAACc,SAAJ,GAAgB;AACdb,EAAAA,WAAW,EAAEH,SAAS,CAACiB,MADT;AAEdb,EAAAA,IAAI,EAAEJ,SAAS,CAACiB,MAFF;AAGdZ,EAAAA,IAAI,EAAEL,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,MAA5B,CAHQ;AAIdb,EAAAA,KAAK,EAAEN,SAAS,CAACiB,MAAV,CAAiBG;AAJV,CAAhB;AAOA,eAAelB,GAAf","sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: 'description',\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: 'og:title',\r\n          content: title,\r\n        },\r\n        {\r\n          property: 'og:description',\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: 'og:type',\r\n          content: 'website',\r\n        },\r\n        {\r\n          name: 'twitter:card',\r\n          content: 'summary',\r\n        },\r\n        {\r\n          name: 'twitter:creator',\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: 'twitter:title',\r\n          content: title,\r\n        },\r\n        {\r\n          name: 'twitter:description',\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'es',\r\n  meta: [],\r\n  description: '',\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n"]},"metadata":{},"sourceType":"module"}