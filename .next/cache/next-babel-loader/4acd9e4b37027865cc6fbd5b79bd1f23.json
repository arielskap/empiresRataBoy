{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arielskap\\\\Documents\\\\empiresRataBoy\\\\src\\\\components\\\\BackCard.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport TopCard from './TopCard';\nimport { useDataPj } from '../hooks';\nimport BackCardHeader from './BackCardHeader';\nimport ButtonTutorial from './ButtonTutorial';\nimport ButtonTalent from './ButtonTalent';\nimport '../assets/styles/backCard.css';\nimport jsonLocal from '../json/talentos.json';\n\nconst BackCard = ({\n  json\n}) => {\n  const {\n    dataPj\n  } = useDataPj({\n    stars: json.stars,\n    element: json.element,\n    classHero: json.classHero\n  });\n  const {\n    0: talents,\n    1: setTalents\n  } = useState(null);\n  const noSingleTalent = {\n    count: 0,\n    row: 0\n  };\n  const {\n    0: upgrade,\n    1: setUpgrade\n  } = useState({\n    attack: 0,\n    defense: 0,\n    health: 0,\n    specialSkill: 0\n  });\n  useEffect(() => {\n    jsonLocal.some(element => {\n      if (element.className === json.classHero) {\n        setTalents(element.talents);\n      }\n\n      return element.className === json.classHero;\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: \"w-full h-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(TopCard, {\n    data: {\n      src: dataPj.srcElement,\n      alt: json.element,\n      name: json.name\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"flex flex-col h-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(BackCardHeader, {\n    upgrade: upgrade,\n    color: dataPj.color,\n    json: {\n      attack: json.attack,\n      defense: json.defense,\n      health: json.health,\n      classHero: json.classHero\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"grid flex-grow grid-cols-2 row-gap-8 px-10 pt-6 overflow-y-auto shadow-inner bg-backCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, talents && talents.map((talent, index) => {\n    const {\n      id,\n      skill,\n      title,\n      text,\n      skillData\n    } = talent;\n\n    if (!skill) {\n      if (noSingleTalent.count <= 1) {\n        noSingleTalent.count++;\n      } else {\n        noSingleTalent.count = 1;\n        noSingleTalent.row++;\n      }\n    }\n\n    return __jsx(\"div\", {\n      key: `button:${title}-${id}`,\n      className: `${skill && 'col-span-2'} flex justify-center`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, __jsx(ButtonTalent, {\n      powerUp: {\n        upgrade,\n        setUpgrade\n      },\n      data: {\n        title,\n        srcClassHero: dataPj.srcClassHero,\n        classHero: json.classHero,\n        index,\n        row: noSingleTalent.row,\n        skill,\n        skillData\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  })), __jsx(\"div\", {\n    className: `w-full h-20 rounded-b-lg bg-${dataPj.color}-800`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), __jsx(ButtonTutorial, {\n    video: json.video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default BackCard;","map":{"version":3,"sources":["C:/Users/Arielskap/Documents/empiresRataBoy/src/components/BackCard.jsx"],"names":["React","useEffect","useState","TopCard","useDataPj","BackCardHeader","ButtonTutorial","ButtonTalent","jsonLocal","BackCard","json","dataPj","stars","element","classHero","talents","setTalents","noSingleTalent","count","row","upgrade","setUpgrade","attack","defense","health","specialSkill","some","className","src","srcElement","alt","name","color","map","talent","index","id","skill","title","text","skillData","srcClassHero","video"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport TopCard from './TopCard';\r\nimport { useDataPj } from '../hooks';\r\nimport BackCardHeader from './BackCardHeader';\r\nimport ButtonTutorial from './ButtonTutorial';\r\nimport ButtonTalent from './ButtonTalent';\r\nimport '../assets/styles/backCard.css';\r\nimport jsonLocal from '../json/talentos.json';\r\n\r\nconst BackCard = ({ json }) => {\r\n  const { dataPj } = useDataPj({ stars: json.stars, element: json.element, classHero: json.classHero });\r\n  const [talents, setTalents] = useState(null);\r\n  const noSingleTalent = {\r\n    count: 0,\r\n    row: 0,\r\n  };\r\n  const [upgrade, setUpgrade] = useState({\r\n    attack: 0,\r\n    defense: 0,\r\n    health: 0,\r\n    specialSkill: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    jsonLocal.some((element) => {\r\n      if (element.className === json.classHero) {\r\n        setTalents(element.talents);\r\n      }\r\n      return element.className === json.classHero;\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='w-full h-full'>\r\n      <TopCard data={{ src: dataPj.srcElement, alt: json.element, name: json.name }} />\r\n      <div className='flex flex-col h-full'>\r\n        <BackCardHeader upgrade={upgrade} color={dataPj.color} json={{ attack: json.attack, defense: json.defense, health: json.health, classHero: json.classHero }} />\r\n        <div className='grid flex-grow grid-cols-2 row-gap-8 px-10 pt-6 overflow-y-auto shadow-inner bg-backCard'>\r\n          {talents && talents.map((talent, index) => {\r\n            const { id, skill, title, text, skillData } = talent;\r\n            if (!skill) {\r\n              if (noSingleTalent.count <= 1) {\r\n                noSingleTalent.count++;\r\n              } else {\r\n                noSingleTalent.count = 1;\r\n                noSingleTalent.row++;\r\n              }\r\n            }\r\n            return (\r\n              <div key={`button:${title}-${id}`} className={`${skill && 'col-span-2'} flex justify-center`}>\r\n                <ButtonTalent powerUp={{ upgrade, setUpgrade }} data={{ title, srcClassHero: dataPj.srcClassHero, classHero: json.classHero, index, row: noSingleTalent.row, skill, skillData }} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={`w-full h-20 rounded-b-lg bg-${dataPj.color}-800`} />\r\n      </div>\r\n      <ButtonTutorial video={json.video} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackCard;\r\n"]},"metadata":{},"sourceType":"module"}