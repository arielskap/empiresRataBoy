{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useMemo } from 'react';\nimport Fuse from 'fuse.js';\n\nvar useSearchHeroes = function useSearchHeroes(json) {\n  _s();\n\n  var _useState = useState({\n    query: '',\n    stars: '',\n    element: '',\n    \"class\": '',\n    family: '',\n    event: ''\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      clean = _useState2[0],\n      setClean = _useState2[1];\n\n  var _useState3 = useState(false),\n      jsonSearch = _useState3[0],\n      setJsonSearch = _useState3[1];\n\n  var createFuse = function createFuse(json, options) {\n    var newOptions = options.keys.filter(function (option) {\n      return option !== '';\n    });\n    newOptions = {\n      threshold: 0.3,\n      keys: newOptions\n    };\n    return new Fuse(json, newOptions);\n  };\n\n  var createOperator = function createOperator(key) {\n    var flag = 0;\n    var operator;\n    var newKey;\n    var result = key.some(function (object) {\n      var value = Object.values(object);\n\n      if (value[0] !== '') {\n        flag++;\n        operator = value[0];\n      }\n\n      return flag >= 2;\n    });\n\n    if (result) {\n      newKey = key.filter(function (object) {\n        var value = Object.values(object);\n        return value[0] !== '';\n      });\n      operator = {\n        $and: newKey\n      };\n    }\n\n    return operator;\n  };\n\n  var searching = function searching(json, options, key) {\n    var newJson = [];\n    var fuse = createFuse(json, options);\n    var operator = createOperator(key);\n    var search = fuse.search(operator);\n    search.forEach(function (element) {\n      newJson.push(element.item);\n    });\n    console.log(newJson);\n    return newJson;\n  };\n\n  var compare = function compare(a, b) {\n    if (a.name.trim() < b.name.trim()) {\n      return -1;\n    }\n\n    if (a.name.trim() > b.name.trim()) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  useMemo(function () {\n    var newJson;\n    var query = data.query,\n        stars = data.stars,\n        element = data.element,\n        classHero = data[\"class\"],\n        family = data.family,\n        event = data.event;\n\n    if (clean) {\n      setData({\n        query: '',\n        stars: '',\n        element: '',\n        \"class\": '',\n        family: '',\n        event: ''\n      });\n      setJsonSearch(json);\n      setClean(false);\n    } else {\n      if (query === '' && stars === '' && element === '' && classHero === '' && family === '' && event === '') {\n        //No tiene nada\n        if (json) {\n          newJson = json.sort(compare);\n          setJsonSearch(newJson);\n        }\n      } else {\n        newJson = searching(json, {\n          threshold: 0.3,\n          keys: [query && {\n            name: 'name'\n          }, stars && {\n            name: 'stars'\n          }, element && {\n            name: 'element'\n          }, classHero && {\n            name: 'class'\n          }, family && {\n            name: 'family'\n          }, event && {\n            name: 'event'\n          }]\n        }, [{\n          name: query\n        }, {\n          stars: stars\n        }, {\n          element: element\n        }, {\n          \"class\": classHero\n        }, {\n          family: family\n        }, {\n          event: event\n        }]);\n        setJsonSearch(newJson);\n      }\n    }\n  }, [json, data, clean]);\n  return {\n    data: data,\n    setData: setData,\n    jsonSearch: jsonSearch,\n    setClean: setClean\n  };\n};\n\n_s(useSearchHeroes, \"dBIDtlsKnoDo3DrAv90kYNEakJY=\");\n\nexport default useSearchHeroes;","map":{"version":3,"sources":["C:/Users/Arielskap/Documents/empiresRataBoy/src/hooks/useSearchHeroes.jsx"],"names":["useState","useMemo","Fuse","useSearchHeroes","json","query","stars","element","family","event","data","setData","clean","setClean","jsonSearch","setJsonSearch","createFuse","options","newOptions","keys","filter","option","threshold","createOperator","key","flag","operator","newKey","result","some","object","value","Object","values","$and","searching","newJson","fuse","search","forEach","push","item","console","log","compare","a","b","name","trim","classHero","sort"],"mappings":"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","sourcesContent":["import { useState, useMemo } from 'react';\r\nimport Fuse from 'fuse.js';\r\n\r\nconst useSearchHeroes = (json) => {\r\n  const [data, setData] = useState({\r\n    query: '',\r\n    stars: '',\r\n    element: '',\r\n    class: '',\r\n    family: '',\r\n    event: '',\r\n  });\r\n  const [clean, setClean] = useState(false);\r\n  const [jsonSearch, setJsonSearch] = useState(false);\r\n\r\n  const createFuse = (json, options) => {\r\n    let newOptions = options.keys.filter((option) => option !== '');\r\n    newOptions = { threshold: 0.3, keys: newOptions };\r\n    return new Fuse(json, newOptions);\r\n  };\r\n\r\n  const createOperator = (key) => {\r\n    let flag = 0;\r\n    let operator;\r\n    let newKey;\r\n\r\n    const result = key.some((object) => {\r\n      const value = Object.values(object);\r\n      if (value[0] !== '') {\r\n        flag++;\r\n        operator = value[0];\r\n      }\r\n      return flag >= 2;\r\n    });\r\n    if (result) {\r\n      newKey = key.filter((object) => {\r\n        const value = Object.values(object);\r\n        return value[0] !== '';\r\n      });\r\n      operator = {\r\n        $and: newKey,\r\n      };\r\n    }\r\n    return operator;\r\n  };\r\n\r\n  const searching = (json, options, key) => {\r\n    const newJson = [];\r\n    const fuse = createFuse(json, options);\r\n    const operator = createOperator(key);\r\n    const search = fuse.search(operator);\r\n    search.forEach((element) => {\r\n      newJson.push(element.item);\r\n    });\r\n    console.log(newJson);\r\n    return newJson;\r\n  };\r\n\r\n  const compare = (a, b) => {\r\n    if (a.name.trim() < b.name.trim()) {\r\n      return -1;\r\n    }\r\n    if (a.name.trim() > b.name.trim()) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  useMemo(() => {\r\n    let newJson;\r\n    const { query, stars, element, class: classHero, family, event } = data;\r\n    if (clean) {\r\n      setData({\r\n        query: '',\r\n        stars: '',\r\n        element: '',\r\n        class: '',\r\n        family: '',\r\n        event: '',\r\n      });\r\n      setJsonSearch(json);\r\n      setClean(false);\r\n    } else {\r\n      if (query === '' && stars === '' && element === '' && classHero === '' && family === '' && event === '') { //No tiene nada\r\n        if (json) {\r\n          newJson = json.sort(compare);\r\n          setJsonSearch(newJson);\r\n        }\r\n      } else {\r\n        newJson = searching(json, {\r\n          threshold: 0.3,\r\n          keys: [\r\n            query && {\r\n              name: 'name',\r\n            },\r\n            stars && {\r\n              name: 'stars',\r\n            },\r\n            element && {\r\n              name: 'element',\r\n            },\r\n            classHero && {\r\n              name: 'class',\r\n            },\r\n            family && {\r\n              name: 'family',\r\n            },\r\n            event && {\r\n              name: 'event',\r\n            },\r\n          ],\r\n        },\r\n        [\r\n          { name: query },\r\n          { stars },\r\n          { element },\r\n          { class: classHero },\r\n          { family },\r\n          { event },\r\n        ]);\r\n        setJsonSearch(newJson);\r\n      }\r\n    }\r\n  }, [json, data, clean]);\r\n  return { data, setData, jsonSearch, setClean };\r\n};\r\n\r\nexport default useSearchHeroes;\r\n"]},"metadata":{},"sourceType":"module"}